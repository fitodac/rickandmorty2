{"ast":null,"code":"var _jsxFileName = \"/Users/fitodac/Sites/henry/rickandmorty/front/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Outlet, useNavigate } from 'react-router-dom';\nimport { AppContext } from './context/context';\nimport './App.css';\nimport NavBar from './components/NavBar/NavBar';\nimport Footer from './components/Footer/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst filter_obj = {\n  gender: null,\n  order: null\n};\nfunction App() {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const [favorites, setFavorites] = useState(false);\n  const [filters, setFilters] = useState({\n    ...filter_obj\n  });\n  const [loading, setLoading] = useState(false);\n  const [auth, setAuth] = useState(false);\n  const navigate = useNavigate();\n  const filterReset = () => setFilters({\n    ...filter_obj\n  });\n\n  // Get character by ID\n  const getCharacter = async id => {\n    // return fetch(`https://rickandmortyapi.com/api/character/${id}`)\n\n    const resp = await fetch(`${process.env.REACT_APP_API_URL}onsearch/${id}`, {\n      mode: 'no-cors'\n    });\n    // .then(resp => resp.json())\n    // .then(data => {\n    // \tconsole.log('data', data)\n    // \treturn data\n    // })\n    // .catch(err => console.error(err))\n\n    // const data = resp.json()\n    console.log('resp', data);\n    return resp;\n  };\n\n  // Delete character\n  const deleteCharacter = id => {\n    const arr = characters.filter(e => e.id !== id);\n    document.getElementById(`character-${id}`).classList.add('-translate-y-[30px]', 'opacity-0', 'pointer-events-none');\n    setTimeout(() => setCharacters(arr), 510);\n  };\n\n  // Add random character\n  const addRandomCharacter = async () => {\n    navigate('/');\n    setLoading(true);\n    const id = Math.floor(Math.random() * (Math.floor(1) - Math.ceil(826) + 1) + Math.ceil(826));\n    const chars = [...characters];\n\n    // Check for existent character\n    if (chars.find(e => e.id === id)) {\n      addRandomCharacter();\n      return;\n    }\n    const char = await getCharacter(id);\n    chars.unshift(char);\n    setLoading(false);\n    setCharacters(chars);\n  };\n\n  // Set loading\n  const handleLoading = status => setLoading(status);\n\n  // Clear all characters\n  const clearAll = () => {\n    navigate('/');\n    setCharacters([]);\n  };\n\n  // Add all characters\n  const updateCharacters = num => {\n    clearAll();\n    return fetch(`https://rickandmortyapi.com/api/character/${num !== null && num !== void 0 ? num : ''}`).then(resp => resp.json()).then(data => {\n      const chars = characters.filter(e => e.favorite);\n      const ids = chars.map(e => e.id);\n      const resp = data.results.filter(e => !ids.includes(e.id));\n      setCharacters([...chars, ...resp]);\n    });\n  };\n\n  // Add character\n  const addCharacter = el => {\n    const chars = [...characters];\n\n    // Check for existent character\n    if (chars.find(e => e.id === el.id)) return;\n    chars.unshift(el);\n    setCharacters(chars);\n  };\n\n  // Authorization\n  const updateAuth = user => setAuth(user);\n  const addFav = id => {\n    filterReset();\n    const chars = [...characters];\n    const idx = chars.findIndex(e => e.id === id);\n    chars[idx].favorite = true;\n    setCharacters(chars);\n  };\n  const removeFav = id => {\n    filterReset();\n    const chars = [...characters];\n    const idx = chars.findIndex(e => e.id === id);\n    delete chars[idx].favorite;\n    setCharacters(chars);\n  };\n  const toggleFavorites = () => {\n    filterReset();\n    setFavorites(!favorites);\n  };\n  const Filter = obj => setFilters(obj);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        characters,\n        addCharacter,\n        updateCharacters,\n        deleteCharacter,\n        addRandomCharacter,\n        loading,\n        handleLoading,\n        clearAll,\n        auth,\n        updateAuth,\n        addFav,\n        removeFav,\n        favorites,\n        toggleFavorites,\n        filters,\n        Filter,\n        filterReset\n      },\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        id: \"mainWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"JsRpym2j64cCf+QeiAoUVLJJU2s=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Outlet","useNavigate","AppContext","NavBar","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","filter_obj","gender","order","App","_s","characters","setCharacters","favorites","setFavorites","filters","setFilters","loading","setLoading","auth","setAuth","navigate","filterReset","getCharacter","id","resp","fetch","process","env","REACT_APP_API_URL","mode","console","log","data","deleteCharacter","arr","filter","e","document","getElementById","classList","add","setTimeout","addRandomCharacter","Math","floor","random","ceil","chars","find","char","unshift","handleLoading","status","clearAll","updateCharacters","num","then","json","favorite","ids","map","results","includes","addCharacter","el","updateAuth","user","addFav","idx","findIndex","removeFav","toggleFavorites","Filter","obj","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fitodac/Sites/henry/rickandmorty/front/src/App.jsx"],"sourcesContent":["import { useState } from 'react'\nimport { Outlet, useNavigate } from 'react-router-dom'\nimport { AppContext } from './context/context'\n\nimport './App.css'\n\nimport NavBar from './components/NavBar/NavBar'\nimport Footer from './components/Footer/Footer'\n\n\nconst filter_obj = { gender: null, order: null }\n\nfunction App() {\n  \n\tconst [ characters, setCharacters ] = useState([])\n\tconst [ favorites, setFavorites ] = useState(false)\n\tconst [ filters, setFilters ] = useState({...filter_obj})\n\tconst [ loading, setLoading ] = useState(false)\n\tconst [ auth, setAuth ] = useState(false)\n  const navigate = useNavigate()\n\t\n\tconst filterReset = () => setFilters({...filter_obj})\n\n\n\t// Get character by ID\n\tconst getCharacter = async id => {\n\t\t// return fetch(`https://rickandmortyapi.com/api/character/${id}`)\n\t\t\n\t\tconst resp = await fetch(`${process.env.REACT_APP_API_URL}onsearch/${id}`,\n\t\t\t{ mode:'no-cors' }\n\t\t)\n\t\t\t// .then(resp => resp.json())\n\t\t\t// .then(data => {\n\t\t\t// \tconsole.log('data', data)\n\t\t\t// \treturn data\n\t\t\t// })\n\t\t\t// .catch(err => console.error(err))\n\n\t\t// const data = resp.json()\n\t\tconsole.log('resp', data)\n\n\t\treturn resp\n\t}\n\n\n\n\t// Delete character\n\tconst deleteCharacter = id => {\n\t\tconst arr = characters.filter(e => e.id !== id)\n\t\tdocument.getElementById(`character-${id}`).classList.add('-translate-y-[30px]', 'opacity-0', 'pointer-events-none')\n\t\tsetTimeout(() => setCharacters(arr), 510)\n\t}\n\n\t// Add random character\n\tconst addRandomCharacter = async () => {\n\t\tnavigate('/')\n\t\tsetLoading(true)\n\t\tconst id = Math.floor(Math.random() * (Math.floor(1) - Math.ceil(826) + 1) + Math.ceil(826))\n\t\tconst chars = [...characters]\n\t\t\n\t\t// Check for existent character\n\t\tif( chars.find( e => e.id === id ) ){\n\t\t\taddRandomCharacter()\n\t\t\treturn\n\t\t}\n\t\t\n\t\tconst char = await getCharacter(id)\n\t\tchars.unshift(char)\n\t\tsetLoading(false)\n\t\tsetCharacters(chars)\n\t}\n\n\n\t// Set loading\n\tconst handleLoading = status => setLoading(status)\n\n\n\t// Clear all characters\n\tconst clearAll = () => {\n\t\tnavigate('/')\n\t\tsetCharacters([])\n\t}\n\t\n\t\n\t// Add all characters\n\tconst updateCharacters = num => {\n\t\tclearAll()\n\t\treturn fetch(`https://rickandmortyapi.com/api/character/${num ?? ''}`)\n\t\t\t.then(resp => resp.json())\n\t\t\t.then(data => {\n\t\t\t\tconst chars = characters.filter(e => e.favorite)\n\t\t\t\tconst ids = chars.map(e => e.id)\n\t\t\t\tconst resp = data.results.filter(e => !ids.includes(e.id))\n\t\t\t\tsetCharacters([...chars, ...resp])\n\t\t\t})\n\t}\n\n\n\t// Add character\n\tconst addCharacter = el => {\n\t\tconst chars = [...characters]\n\n\t\t// Check for existent character\n\t\tif( chars.find( e => e.id === el.id ) ) return\n\n\t\tchars.unshift(el)\n\t\tsetCharacters(chars)\n\t}\n\n\n\t// Authorization\n\tconst updateAuth = user => setAuth(user)\n\n\n\tconst addFav = id => {\n\t\tfilterReset()\n\t\tconst chars = [...characters]\n\t\tconst idx = chars.findIndex(e => e.id === id)\n\t\tchars[idx].favorite = true\n\t\tsetCharacters(chars)\n\t}\n\n\n\tconst removeFav = id => {\n\t\tfilterReset()\n\t\tconst chars = [...characters]\n\t\tconst idx = chars.findIndex(e => e.id === id)\n\t\tdelete chars[idx].favorite\n\t\tsetCharacters(chars)\n\t}\n\n\n\tconst toggleFavorites = () => {\n\t\tfilterReset()\n\t\tsetFavorites(!favorites)\n\t}\n\n\tconst Filter = obj => setFilters(obj)\n\n\n\n  return (\n    <>\n\t\t\t<AppContext.Provider \n\t\t\t\tvalue={{\n\t\t\t\t\tcharacters,\n\t\t\t\t\taddCharacter,\n\t\t\t\t\tupdateCharacters,\n\t\t\t\t\tdeleteCharacter,\n\t\t\t\t\taddRandomCharacter,\n\t\t\t\t\tloading,\n\t\t\t\t\thandleLoading,\n\t\t\t\t\tclearAll,\n\t\t\t\t\tauth,\n\t\t\t\t\tupdateAuth,\n\t\t\t\t\taddFav,\n\t\t\t\t\tremoveFav,\n\t\t\t\t\tfavorites,\n\t\t\t\t\ttoggleFavorites,\n\t\t\t\t\tfilters,\n\t\t\t\t\tFilter,\n\t\t\t\t\tfilterReset\n\t\t\t\t}}>\n\t\t\t\t<main id=\"mainWrapper\">\n\t\t\t\t\t<NavBar />\n\t\t\t\t\t<Outlet/>\n\t\t\t\t\t<Footer />\n\t\t\t\t</main>\n\t\t\t</AppContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AACtD,SAASC,UAAU,QAAQ,mBAAmB;AAE9C,OAAO,WAAW;AAElB,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,MAAM,MAAM,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG/C,MAAMC,UAAU,GAAG;EAAEC,MAAM,EAAE,IAAI;EAAEC,KAAK,EAAE;AAAK,CAAC;AAEhD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEd,MAAM,CAAEC,UAAU,EAAEC,aAAa,CAAE,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAEiB,SAAS,EAAEC,YAAY,CAAE,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAEmB,OAAO,EAAEC,UAAU,CAAE,GAAGpB,QAAQ,CAAC;IAAC,GAAGU;EAAU,CAAC,CAAC;EACzD,MAAM,CAAEW,OAAO,EAAEC,UAAU,CAAE,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAEuB,IAAI,EAAEC,OAAO,CAAE,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACxC,MAAMyB,QAAQ,GAAGvB,WAAW,EAAE;EAE/B,MAAMwB,WAAW,GAAGA,CAAA,KAAMN,UAAU,CAAC;IAAC,GAAGV;EAAU,CAAC,CAAC;;EAGrD;EACA,MAAMiB,YAAY,GAAG,MAAMC,EAAE,IAAI;IAChC;;IAEA,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,YAAWL,EAAG,EAAC,EACxE;MAAEM,IAAI,EAAC;IAAU,CAAC,CAClB;IACA;IACA;IACA;IACA;IACA;IACA;;IAED;IACAC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEC,IAAI,CAAC;IAEzB,OAAOR,IAAI;EACZ,CAAC;;EAID;EACA,MAAMS,eAAe,GAAGV,EAAE,IAAI;IAC7B,MAAMW,GAAG,GAAGxB,UAAU,CAACyB,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACb,EAAE,KAAKA,EAAE,CAAC;IAC/Cc,QAAQ,CAACC,cAAc,CAAE,aAAYf,EAAG,EAAC,CAAC,CAACgB,SAAS,CAACC,GAAG,CAAC,qBAAqB,EAAE,WAAW,EAAE,qBAAqB,CAAC;IACnHC,UAAU,CAAC,MAAM9B,aAAa,CAACuB,GAAG,CAAC,EAAE,GAAG,CAAC;EAC1C,CAAC;;EAED;EACA,MAAMQ,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACtCtB,QAAQ,CAAC,GAAG,CAAC;IACbH,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMM,EAAE,GAAGoB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIF,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,GAAGD,IAAI,CAACG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGH,IAAI,CAACG,IAAI,CAAC,GAAG,CAAC,CAAC;IAC5F,MAAMC,KAAK,GAAG,CAAC,GAAGrC,UAAU,CAAC;;IAE7B;IACA,IAAIqC,KAAK,CAACC,IAAI,CAAEZ,CAAC,IAAIA,CAAC,CAACb,EAAE,KAAKA,EAAE,CAAE,EAAE;MACnCmB,kBAAkB,EAAE;MACpB;IACD;IAEA,MAAMO,IAAI,GAAG,MAAM3B,YAAY,CAACC,EAAE,CAAC;IACnCwB,KAAK,CAACG,OAAO,CAACD,IAAI,CAAC;IACnBhC,UAAU,CAAC,KAAK,CAAC;IACjBN,aAAa,CAACoC,KAAK,CAAC;EACrB,CAAC;;EAGD;EACA,MAAMI,aAAa,GAAGC,MAAM,IAAInC,UAAU,CAACmC,MAAM,CAAC;;EAGlD;EACA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACtBjC,QAAQ,CAAC,GAAG,CAAC;IACbT,aAAa,CAAC,EAAE,CAAC;EAClB,CAAC;;EAGD;EACA,MAAM2C,gBAAgB,GAAGC,GAAG,IAAI;IAC/BF,QAAQ,EAAE;IACV,OAAO5B,KAAK,CAAE,6CAA4C8B,GAAG,aAAHA,GAAG,cAAHA,GAAG,GAAI,EAAG,EAAC,CAAC,CACpEC,IAAI,CAAChC,IAAI,IAAIA,IAAI,CAACiC,IAAI,EAAE,CAAC,CACzBD,IAAI,CAACxB,IAAI,IAAI;MACb,MAAMe,KAAK,GAAGrC,UAAU,CAACyB,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACsB,QAAQ,CAAC;MAChD,MAAMC,GAAG,GAAGZ,KAAK,CAACa,GAAG,CAACxB,CAAC,IAAIA,CAAC,CAACb,EAAE,CAAC;MAChC,MAAMC,IAAI,GAAGQ,IAAI,CAAC6B,OAAO,CAAC1B,MAAM,CAACC,CAAC,IAAI,CAACuB,GAAG,CAACG,QAAQ,CAAC1B,CAAC,CAACb,EAAE,CAAC,CAAC;MAC1DZ,aAAa,CAAC,CAAC,GAAGoC,KAAK,EAAE,GAAGvB,IAAI,CAAC,CAAC;IACnC,CAAC,CAAC;EACJ,CAAC;;EAGD;EACA,MAAMuC,YAAY,GAAGC,EAAE,IAAI;IAC1B,MAAMjB,KAAK,GAAG,CAAC,GAAGrC,UAAU,CAAC;;IAE7B;IACA,IAAIqC,KAAK,CAACC,IAAI,CAAEZ,CAAC,IAAIA,CAAC,CAACb,EAAE,KAAKyC,EAAE,CAACzC,EAAE,CAAE,EAAG;IAExCwB,KAAK,CAACG,OAAO,CAACc,EAAE,CAAC;IACjBrD,aAAa,CAACoC,KAAK,CAAC;EACrB,CAAC;;EAGD;EACA,MAAMkB,UAAU,GAAGC,IAAI,IAAI/C,OAAO,CAAC+C,IAAI,CAAC;EAGxC,MAAMC,MAAM,GAAG5C,EAAE,IAAI;IACpBF,WAAW,EAAE;IACb,MAAM0B,KAAK,GAAG,CAAC,GAAGrC,UAAU,CAAC;IAC7B,MAAM0D,GAAG,GAAGrB,KAAK,CAACsB,SAAS,CAACjC,CAAC,IAAIA,CAAC,CAACb,EAAE,KAAKA,EAAE,CAAC;IAC7CwB,KAAK,CAACqB,GAAG,CAAC,CAACV,QAAQ,GAAG,IAAI;IAC1B/C,aAAa,CAACoC,KAAK,CAAC;EACrB,CAAC;EAGD,MAAMuB,SAAS,GAAG/C,EAAE,IAAI;IACvBF,WAAW,EAAE;IACb,MAAM0B,KAAK,GAAG,CAAC,GAAGrC,UAAU,CAAC;IAC7B,MAAM0D,GAAG,GAAGrB,KAAK,CAACsB,SAAS,CAACjC,CAAC,IAAIA,CAAC,CAACb,EAAE,KAAKA,EAAE,CAAC;IAC7C,OAAOwB,KAAK,CAACqB,GAAG,CAAC,CAACV,QAAQ;IAC1B/C,aAAa,CAACoC,KAAK,CAAC;EACrB,CAAC;EAGD,MAAMwB,eAAe,GAAGA,CAAA,KAAM;IAC7BlD,WAAW,EAAE;IACbR,YAAY,CAAC,CAACD,SAAS,CAAC;EACzB,CAAC;EAED,MAAM4D,MAAM,GAAGC,GAAG,IAAI1D,UAAU,CAAC0D,GAAG,CAAC;EAIpC,oBACEvE,OAAA,CAAAE,SAAA;IAAAsE,QAAA,eACDxE,OAAA,CAACJ,UAAU,CAAC6E,QAAQ;MACnBC,KAAK,EAAE;QACNlE,UAAU;QACVqD,YAAY;QACZT,gBAAgB;QAChBrB,eAAe;QACfS,kBAAkB;QAClB1B,OAAO;QACPmC,aAAa;QACbE,QAAQ;QACRnC,IAAI;QACJ+C,UAAU;QACVE,MAAM;QACNG,SAAS;QACT1D,SAAS;QACT2D,eAAe;QACfzD,OAAO;QACP0D,MAAM;QACNnD;MACD,CAAE;MAAAqD,QAAA,eACFxE,OAAA;QAAMqB,EAAE,EAAC,aAAa;QAAAmD,QAAA,gBACrBxE,OAAA,CAACH,MAAM;UAAA8E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eACV9E,OAAA,CAACN,MAAM;UAAAiF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,eACT9E,OAAA,CAACF,MAAM;UAAA6E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACJ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACc,iBAClB;AAEP;AAACvE,EAAA,CA/JQD,GAAG;EAAA,QAOOX,WAAW;AAAA;AAAAoF,EAAA,GAPrBzE,GAAG;AAiKZ,eAAeA,GAAG;AAAC,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}